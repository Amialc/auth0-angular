!function(){angular.module("auth0",["auth0.service","auth0.utils"]).run(["auth",function(a){a.hookEvents()}]),angular.module("auth0.utils",[]).provider("authUtils",function(){var a={capitalize:function(a){return a?a.charAt(0).toUpperCase()+a.substring(1).toLowerCase():null}};angular.extend(this,a),this.$get=["$rootScope","$q",function(b,c){var d={};return angular.extend(d,a),d.safeApply=function(a){var c=b.$root.$$phase;"$apply"===c||"$digest"===c?a&&"function"==typeof a&&a():b.$apply(a)},d.callbackify=function(a,b,c,e){return angular.isFunction(a)?function(f){f=Array.prototype.slice.call(arguments);var g=function(a,d,e){return a?void(c&&c(a)):(e=Array.prototype.slice.call(arguments,1),void(b&&b.apply(null,e)))};f.push(d.applied(g)),a.apply(e,f)}:void 0},d.isWidget=function(a){return a&&a.getClient},d.promisify=function(a,b){return angular.isFunction(a)?function(e){e=Array.prototype.slice.call(arguments);var f=c.defer(),g=function(a,b,c){return a?void f.reject(a):(c=Array.prototype.slice.call(arguments,1),void f.resolve(c.length>1?c:b))};return e.push(d.applied(g)),a.apply(b,e),f.promise.spread=f.promise.spread||function(a,b){return f.promise.then(function(b){return Array.isArray(b)?a.apply(null,b):a(b)},b)},f.promise}:void 0},d.applied=function(a){return function(b,c){b=b,c=c;var e=arguments;d.safeApply(function(){a.apply(null,e)})}},d}]}),angular.module("auth0.service",["auth0.utils"]).provider("auth",["authUtilsProvider",function(a){var b={callbackOnLocationHash:!0},c=this;this.init=function(a,c){if(!c&&"undefined"==typeof Auth0Widget&&"undefined"==typeof Auth0)throw new Error("You must add either Auth0Widget.js or Auth0.js");if(!a)throw new Error("You must set options when calling init");this.loginUrl=a.loginUrl,this.loginState=a.loginState,this.clientID=a.clientID||a.clientId,this.sso=a.sso;var d=c;d||"undefined"==typeof Auth0Widget||(d=Auth0Widget),d||"undefined"==typeof Auth0||(d=Auth0),this.auth0lib=new d(angular.extend(b,a)),this.auth0lib.getClient?(this.auth0js=this.auth0lib.getClient(),this.isWidget=!0):(this.auth0js=this.auth0lib,this.isWidget=!1)},this.eventHandlers={},this.on=function(a,b){this.eventHandlers[a]||(this.eventHandlers[a]=[]),this.eventHandlers[a].push(b)};var d=["loginSuccess","loginFailure","logout","forbidden","authenticated"];angular.forEach(d,function(b){c["add"+a.capitalize(b)+"Handler"]=function(a){c.on(b,a)}}),this.$get=["$rootScope","$q","$injector","$window","$location","authUtils",function(a,b,d,e,f,g){function h(){c.loginUrl?f.path(c.loginUrl):c.loginState?d.get("$state").go(c.loginState):k("forbidden")}var i={isAuthenticated:!1},j=function(a){return c.eventHandlers[a]},k=function(b,c){a.$broadcast("auth0."+b,c),angular.forEach(j(b)||[],function(a){d.invoke(a,i,c)})},l=function(a,b,c,d,e){var f=i.getProfile(a),g={idToken:a,accessToken:b,state:c,refreshToken:d,isAuthenticated:!0};return angular.extend(i,g),k(e?"authenticated":"loginSuccess",angular.extend({profile:f},g)),f};a.$on("$locationChangeStart",function(){var a=c.auth0lib.parseHash(e.location.hash);if(!i.isAuthenticated){if(a&&a.id_token)return void l(a.id_token,a.access_token,a.state,a.refresh_token);c.sso&&c.auth0js.getSSOData(g.applied(function(a,b){b.sso&&i.signin({popup:!1,connection:b.lastUsedConnection.strategy},null,null,c.auth0js)}))}}),a.$on("auth0.forbiddenRequest",function(){h()}),c.loginUrl&&a.$on("$routeChangeStart",function(a,b){b.$$route&&b.$$route.requiresLogin&&(i.isAuthenticated||f.path(c.loginUrl))}),c.loginState&&a.$on("$stateChangeStart",function(a,b){b.data&&b.data.requiresLogin&&(i.isAuthenticated||(a.preventDefault(),d.get("$state").go(c.loginState)))}),i.config=c;var m=function(a){var b=j("loginSuccess");if(!(a.popup||a.username||a.email||b&&0!==b.length))throw new Error("You must define a loginSuccess handler if not using popup mode or not doing ro call because that means you are doing a redirect")};return i.hookEvents=function(){},i.getToken=function(a){a=a||{scope:"openid"},a.id_token||a.refresh_token||(a.id_token=i.idToken);var b=g.promisify(c.auth0js.getDelegationToken,c.auth0js);return b(a).then(function(a){return a.id_token})},i.refreshIdToken=function(a){var b=g.promisify(c.auth0js.refreshToken,c.auth0js);return b(a||i.refreshToken).then(function(a){return a.id_token})},i.renewIdToken=function(a){var b=g.promisify(c.auth0js.renewIdToken,c.auth0js);return b(a||i.idToken).then(function(a){return a.id_token})},i.signin=function(a,b,d,e){a=a||{},m(a);var f=e||c.auth0lib,h=g.callbackify(f.signin,function(a,c,d,e,f){l(c,d,e,f).then(function(a){b&&b(a)})},function(a){k("loginFailure",{error:a}),d&&d(a)},f);g.isWidget(f)?h(a,null):h(a)},i.signup=function(a,b,d){a=a||{},m(a);var e=c.auth0lib,f=g.callbackify(e.signup,function(c,d,e,f,g){angular.isUndefined(a.auto_login)||a.auto_login?l(d,e,f,g).then(function(a){b&&b(a)}):b()},function(a){k("loginFailure",{error:a}),d&&d(a)},e);c.isWidget?f(a,null):f(a)},i.reset=function(a,b,d){a=a||{};var e,f=c.auth0lib;(e=c.isWidget?g.callbackify(f.reset,b,d,f):g.callbackify(f.changePassword,b,d,f))(a)},i.signout=function(){i.isAuthenticated=!1,i.profile=null,i.profilePromise=null,i.idToken=null,i.state=null,i.accessToken=null,i.tokenPayload=null,k("logout")},i.authenticate=function(a,b,c,d){l(a,b,c,d,!0)},i.getProfile=function(a){var b=g.promisify(c.auth0lib.getProfile,c.auth0lib);return i.profilePromise=b(a||i.idToken),i.profilePromise.then(function(a){return i.profile=a,a})},i}]}])}();